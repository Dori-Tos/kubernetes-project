name: Python Tests CI

on:
  push:
    branches: [ "dev-main" ]
  pull_request:
    branches: [ "dev-main" ]
  workflow_dispatch:

permissions:
  contents: write  # Add this to allow pushing commits

jobs:
  test-and-commit:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}  # Explicitly use GITHUB_TOKEN

      # Run unit tests inside Docker
      - name: Run unit tests in Docker
        uses: addnab/docker-run-action@v3
        with:
          image: python:3.13-slim
          options: -v ${{ github.workspace }}:/github/workspace --workdir /github/workspace
          run: |
            apt-get update
            DEBIAN_FRONTEND=noninteractive apt-get install -y python3-pip
            python -m pip install --upgrade pip
            cd kubernetes-project
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            pip install pytest
            PYTHONPATH=. pytest -v test

      # Commit changes on host runner (Git is available)
      - name: Commit changes
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --staged --quiet || git commit -m "Auto-commit after successful tests"
          git push origin dev-main

  build-and-push:
    runs-on: ubuntu-latest
    needs: test-and-commit   # ðŸ‘ˆ ensures tests must pass before build
    steps:
      - uses: actions/checkout@v4

      - name: Debug secrets
        run: |
          echo "Docker username: ${{ secrets.DOCKER_USERNAME != '' }}"
          echo "Docker password: ${{ secrets.DOCKER_PASSWORD != '' }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE=arthurvb/movie-rating
          TAG=${GITHUB_SHA::7}
          docker build -t $IMAGE:$TAG -t $IMAGE:latest .
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest